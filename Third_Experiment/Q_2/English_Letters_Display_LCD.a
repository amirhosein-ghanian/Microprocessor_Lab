;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : English_Letters_Display_LCD
;Version :
;Date    : 1/3/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;
;int X_Length;
;int Y_Length;
;int Timer_OF_Counter;
;int Letter_Position;
;
;char Letters[] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z ...

	.DSEG
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0024       Timer_OF_Counter++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0025       if (Letter_Position < 26 )
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0026          {
; 0000 0027            if(Timer_OF_Counter == 500 )
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0028              {
; 0000 0029 
; 0000 002A           	lcd_putchar(Letters[Letter_Position]);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002B           	Letter_Position += 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002C           	//increase x position
; 0000 002D           	X_Length=X_Length+1;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002E 
; 0000 002F           	//check need to change line
; 0000 0030           	if(Letter_Position==20)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0031 	  {
; 0000 0032             	    X_Length=0;
;PCODE: $00000025 VOL: 0
; 0000 0033             	    Y_Length=1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0034           	  }
; 0000 0035 
; 0000 0036           	lcd_gotoxy(X_Length,Y_Length);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0037           	Timer_OF_Counter=0;
;PCODE: $0000002C VOL: 0
; 0000 0038        	}
; 0000 0039           }
;PCODE: $0000002D VOL: 0
; 0000 003A        else
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003B             {
; 0000 003C               TCCR0=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003D               TIMSK=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003E             }
;PCODE: $00000034 VOL: 0
; 0000 003F        TCNT0=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0040 }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;
;void main(void)
; 0000 0044 {
;PCODE: $0000003A VOL: 0
; 0000 0045 
; 0000 0046     DDRB=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0047     PORTB=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0048 
; 0000 0049     X_Length=0;
;PCODE: $0000003F VOL: 0
; 0000 004A     Y_Length=0;
;PCODE: $00000040 VOL: 0
; 0000 004B     Timer_OF_Counter=0;
;PCODE: $00000041 VOL: 0
; 0000 004C     Letter_Position=0;
;PCODE: $00000042 VOL: 0
; 0000 004D 
; 0000 004E     TCCR0=0x01;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 004F     TCNT0=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0050     OCR0=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0051     TIMSK=0x01;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0052 
; 0000 0053      lcd_init(20);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0054     #asm("sei")
;PCODE: $0000004D VOL: 0
	sei
;PCODE: $0000004E VOL: 0
; 0000 0055 
; 0000 0056     while (1)
;PCODE: $0000004F VOL: 0
; 0000 0057     {
; 0000 0058     }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0059 
; 0000 005A 
; 0000 005B }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
